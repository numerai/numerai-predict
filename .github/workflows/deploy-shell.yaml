name: Deploy Shell Image (3.11 only)

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: numerai_predict

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  public-py311-image:
    runs-on: ubuntu-latest-large
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Extract short git SHA
        run: echo "GIT_REF=`git rev-parse --short HEAD`" >> $GITHUB_ENV

      - name: Log in to Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}_shell
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push Docker image as LATEST to Github Container registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./py3.11/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}_shell:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Push Docker image git ref to Github Container registry
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./py3.11/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}_shell:${{ env.GIT_REF }}
          labels: ${{ steps.meta.outputs.labels }}

  internal-py311-image:
    runs-on: ubuntu-latest-large
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.MODEL_UPLOADS_ACCOUNT_ID }}:role/github-actions
          aws-region: us-west-2

      - name: Build and Push Docker Image
        run: ACCOUNT_ID=${{ secrets.MODEL_UPLOADS_ACCOUNT_ID }} make push_latest_shell
